<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="test.chenfengweiqing.com.android_activenotifications">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".activenotifications.ActiveNotificationsActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".clippingbasic.MainActivity" />
        <activity
            android:name=".floatingactionbuttonbasic.MainActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <activity
            android:name=".interpolator.MainActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>
        <activity
            android:name=".jobscheduler.MainActivity"
            android:label="@string/app_name"
            android:windowSoftInputMode="stateHidden">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service
            android:name=".jobscheduler.service.MyJobService"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <activity
            android:name=".multiwindowplayground.MainActivity"
            android:taskAffinity="">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- This Activity cannot be resized and is always displayed full screen. -->
        <activity
            android:name=".multiwindowplayground.activities.UnresizableActivity"
            android:resizeableActivity="false"
            android:taskAffinity="" />

        <!-- This Activity has a default size (750x500dp) with a minimum size
        (500dp at its shortest side). It is launched in the top/end (top/right) corner by default.
         These attributes are defined in the 'layout' tag within an Activity definition. -->
        <activity
            android:name=".multiwindowplayground.activities.MinimumSizeActivity"
            android:launchMode="singleInstance"
            android:taskAffinity="">
            <layout
                android:defaultHeight="500dp"
                android:defaultWidth="750dp"
                android:gravity="top|end"
                android:minHeight="500dp"
                android:minWidth="500dp" />
        </activity>

        <!-- In split-screen mode, this Activity is launched adjacent to another Activity. This is
          controlled via a flag set in the intent that launches this Activity. -->
        <activity
            android:name=".multiwindowplayground.activities.AdjacentActivity"
            android:taskAffinity="" />

        <!-- This Activity is launched within an area defined in its launch intent. -->
        <activity
            android:name=".multiwindowplayground.activities.LaunchBoundsActivity"
            android:taskAffinity="" />

        <!-- This activity handles all configuration changes itself.
        Callbacks for configuration changes are received in 'onConfigurationChanged'. -->
        <activity
            android:name=".multiwindowplayground.activities.CustomConfigurationChangeActivity"
            android:configChanges="screenSize|smallestScreenSize|screenLayout|orientation"
            android:launchMode="singleInstance"
            android:taskAffinity="" />

        <!-- This Activity is launched in a new task without any special flags or settings. -->
        <activity
            android:name=".multiwindowplayground.activities.BasicActivity"
            android:launchMode="singleInstance"
            android:taskAffinity="" />

        <activity android:name=".recyclerview.MainActivity" />
        <activity android:name=".screencapture.MainActivity" />

        <activity android:name=".slidingtabsbasic.MainActivity" />

        <activity android:name=".storageclient.MainActivity" />
        <activity
            android:name=".storageprovider.MainActivity"
            android:label="@string/app_name"
            android:uiOptions="splitActionBarWhenNarrow">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <!--BEGIN_INCLUDE(provider_manifest)-->
        <!--
        Declare the document provider class MyCloudProvider to the system.  The MANAGE_DOCUMENTS
        permission belongs only to the Android system, ensuring this provider will never be used
        directly by another app.  The provider must grant URI permissions in order to expose the
        specific documents(s) chosen, while not sharing all of its data by default.  It must be
        exported to be visible outside the application, and it must include a filter with the intent
        "android.content.action.DOCUMENTS_PROVIDER" in order to be shown in the system document
        picker UI.
        -->
        <provider
            android:name=".storageprovider.MyCloudProvider"
            android:authorities="com.example.android.storageprovider.documents"
            android:exported="true"
            android:grantUriPermissions="true"
            android:permission="android.permission.MANAGE_DOCUMENTS">
            <intent-filter>
                <action android:name="android.content.action.DOCUMENTS_PROVIDER" />
            </intent-filter>
        </provider>

        <activity android:name=".swiperefreshlayoutbasic.MainActivity" />
        <activity android:name=".swiperefreshlistfragment.MainActivity" />
        <activity android:name=".swiperefreshmultipleviews.MainActivity" />
    </application>

</manifest>